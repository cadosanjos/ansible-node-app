---
- name: Create Prometheus path
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - /etc/prometheus
    - /var/lib/prometheus

- name: Download Prometheus
  get_url:
    url: https://github.com/prometheus/prometheus/releases/download/v2.22.0-rc.0/prometheus-2.22.0-rc.0.linux-amd64.tar.gz
    dest: /tmp
    force_basic_auth: true
  register: download
  until: download.failed is defined and not download.failed

- name: Unarchive Prometheus file
  unarchive:
    src: /tmp/prometheus-2.22.0-rc.0.linux-amd64.tar.gz
    dest: /var/lib/prometheus
    remote_src: true

- name: "Send {{ item.file }} file to {{ item.path }}"
  command: mv "{{ item.file }}" "{{ item.path }}"
  args:
    chdir: /var/lib/prometheus/prometheus-2.22.0-rc.0.linux-amd64
  with_items:
    - {file: 'prometheus', path: '/usr/local/bin'}
    - {file: 'promtool', path: '/usr/local/bin'}
    - {file: 'consoles', path: '/etc/prometheus'}
    - {file: 'console_libraries', path: '/etc/prometheus'}

- name: Configure prometheus.yml
  lineinfile:
    path: /etc/prometheus/prometheus.yml
    create: true
    line: |-
      global:
        scrape_interval: 15s

      scrape_configs:
        - job_name: 'prometheus'
          scrape_interval: 5s
          static_configs:
            - targets: ['localhost:9090']

- name: Configure prometheus.yml
  lineinfile:
    path: /etc/systemd/system/prometheus.service
    create: true
    line: |-
      [Unit]
        Description=Prometheus Monitoring
        Wants=network-online.target
        After=network-online.target

      [Service]
        #User=prometheus
        #Group=prometheus
        Type=simple
        ExecStart=/usr/local/bin/prometheus \
        --config.file /etc/prometheus/prometheus.yml \
        --storage.tsdb.path /var/lib/prometheus/ \
        --web.console.templates=/etc/prometheus/consoles \
        --web.console.libraries=/etc/prometheus/console_libraries
        ExecReload=/bin/kill -HUP $MAINPID

      [Install]
        WantedBy=multi-user.target

- name: Reload systemd
  command: systemctl daemon-reload

- name: Enable Prometheus
  command: systemctl enable prometheus

- name: Start Prometheus
  command: systemctl start prometheus

- name: Check Prometheus status
  command: systemctl status prometheus
  register: prometheus_validation
  failed_when: "'Active: active (running)' not in prometheus_validation.stdout"
